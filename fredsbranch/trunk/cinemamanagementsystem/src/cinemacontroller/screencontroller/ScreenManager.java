/*
 * ScreenManager.java
 *
 * Created on 30 mars 2009, 13:05
 */

package cinemacontroller.screencontroller;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;

import javax.swing.JOptionPane;

import usefulmethods.Useful;

import cinemacontroller.rotationalcontroller.AutomaticRotation;
import databasecontroller.MySqlController;

/**
 *
 * @author  Frédéric
 */
public class ScreenManager extends javax.swing.JFrame {

	private static final long serialVersionUID = -3688656990364226359L;
	private int index;
	private Calendar endDateDatabase;
    /** Creates new form ScreenManager */
    public ScreenManager(int index) {
    	this.index=index;
    	createTempTable();
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane_date_description = new javax.swing.JTextPane();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Screen Manager - Multiplex Manager");
        setIconImage(getToolkit().getImage(getClass().getResource("/cinemacontroller/gui/icons/timetable.png")));

        jPanel2.setBackground(new java.awt.Color(24, 24, 24));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Screen Manager");

        jScrollPane3.setBorder(null);

        jTextPane_date_description.setBackground(new java.awt.Color(24, 24, 24));
        jTextPane_date_description.setEditable(false);
        jTextPane_date_description.setForeground(new java.awt.Color(255, 255, 255));
        jTextPane_date_description.setText("You can close or open screens for a day.");
        jScrollPane3.setViewportView(jTextPane_date_description);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Start AutomaticRotation");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel10.setText("Close Screen");
        
        MySqlController connection;
        ResultSet result;
        Useful use = new Useful();

		try {
			connection = MySqlController.getInstance();
			
			result= connection.getData("SELECT END_DATE FROM PERIOD");
			while (result.next()) {
				endDateDatabase = use.toCalendar(result.getString(1));
			}
			
        Calendar startDate;
        Calendar endDate;
        
        if(index == 0){
        	
        	startDate = use.toCalendar(use.getDateToday());
        	endDate = (Calendar)endDateDatabase.clone();
        	endDate = use.changeDate(endDate, 1);
        	
        	jComboBox2.addItem("");
        	while(!startDate.equals(endDate)){
        		jComboBox2.addItem(use.calendarToString(startDate));
        		startDate = use.changeDate(startDate, 1);
        	}
        	
        }
        else{
        	if(index == 1){
        		
        	}
        }

			result= connection.getData("SELECT ID_SCREEN FROM SCREENS");
			jComboBox1.addItem("");
			while (result.next()) {
				jComboBox1.addItem("Screen "+result.getString(1));
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
        

        jButton3.setText("Close Screen");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Open Screen");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel11.setText("Open Screen");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 916, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 494, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3))
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton4))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(243, 243, 243))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
	this.dispose();
}

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
	
	if(this.jComboBox1.getSelectedItem() != this.jComboBox1.getItemAt(0)){

		if(this.jComboBox2.getSelectedItem() != this.jComboBox2.getItemAt(0)){
			
		    try {

		    	MySqlController connection = MySqlController.getInstance();
		    	//System.out.println("SELECT * FROM TEMPCLOSEDSCREENS WHERE ID_SCREEN='"+jComboBox1.getSelectedItem().toString().replace("Screen ", "")+"' AND DAY='"+jComboBox2.getSelectedItem()+"'");
		    	ResultSet r = connection.getData("SELECT * FROM TEMPCLOSEDSCREENS WHERE ID_SCREEN='"+jComboBox1.getSelectedItem().toString().replace("Screen ", "")+"' AND DAY='"+jComboBox2.getSelectedItem()+"'");
		    	
		    	if(!r.next()){
		    		ResultSet r1 = connection.getData("SELECT COUNT(ID_SCREEN) FROM TEMPCLOSEDSCREENS WHERE DAY='"+jComboBox2.getSelectedItem()+"'");

		    		while(r1.next()){
		    			ResultSet r2 = connection.getData("SELECT COUNT(ID_SCREEN) FROM SCREENS");
		    			while(r2.next()){
		    				ResultSet r3 = connection.getData("SELECT VALUE FROM INDEXES WHERE NAME='MINIMUM_SCREENING_FILM'");
		    				while(r3.next()){
		    					
		    					if(r1.getInt(1) < r2.getInt(1)-r3.getInt(1)){
		    						//System.out.println("INSERT INTO TEMPCLOSEDSCREENS VALUES ('"+jComboBox1.getSelectedItem().toString().replace("Screen ", "")+"','"+jComboBox2.getSelectedItem()+"')");
		    						connection.putData("INSERT INTO TEMPCLOSEDSCREENS VALUES ('"+jComboBox1.getSelectedItem().toString().replace("Screen ", "")+"','"+jComboBox2.getSelectedItem()+"')");
		    						JOptionPane.showMessageDialog(null, "Screen "+jComboBox1.getSelectedItem().toString().replace("Screen ", "")+" closed the "+jComboBox2.getSelectedItem(),"Screens closed",JOptionPane.INFORMATION_MESSAGE);
		    						jComboBox1.setSelectedIndex(0);
		    			    		jComboBox2.setSelectedIndex(0);
		    			    		
		    			    		fillJcomboBox();
		    					}
		    					else{
		    						JOptionPane.showMessageDialog(null, "Too many screens are closed. Minimum of available screens is reached.","Screens closed",JOptionPane.WARNING_MESSAGE);
		    						jComboBox1.setSelectedIndex(0);
		    			    		jComboBox2.setSelectedIndex(0);
		    					}
		    				}
		    			}
		    		}
		    	}
		    	else{
		    		JOptionPane.showMessageDialog(null, "The screen "+jComboBox1.getSelectedItem().toString().replace("Screen ", "")+" is already closed the "+jComboBox2.getSelectedItem(), "Screens closed", JOptionPane.WARNING_MESSAGE);
		    		jComboBox1.setSelectedIndex(0);
		    		jComboBox2.setSelectedIndex(0);
		    	}
		    	

		    } catch (Exception e) {
		        JOptionPane.showMessageDialog(null, "Unable to connect to MySQL database.\n" + e, "Database Error", JOptionPane.WARNING_MESSAGE);
		    }
		}
		else{
	    	JOptionPane.showMessageDialog(null, "Please choose a date for closing.", "Invalid Date", JOptionPane.WARNING_MESSAGE);
	    }
	}
	else{
    	JOptionPane.showMessageDialog(null, "Please choose a screen to close.", "Invalid Screen", JOptionPane.WARNING_MESSAGE);
    }

}

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
	
	if(this.jComboBox3.getSelectedItem() != this.jComboBox3.getItemAt(0)){
		
		String screen = jComboBox3.getSelectedItem().toString();
		screen = screen.replace("Screen ", "");
		screen = screen.substring(0,screen.indexOf(" ")).trim();
		//System.out.println(screen);
		
		String date = jComboBox3.getSelectedItem().toString();
		date = date.substring(date.indexOf("-"), date.length()).replaceFirst("-", "").trim();
		//System.out.println(date);
		
		try {
			MySqlController connection = MySqlController.getInstance();

			connection.putData("DELETE FROM TEMPCLOSEDSCREENS WHERE ID_SCREEN='"+screen+"' AND DAY='"+date+"'");
			JOptionPane.showMessageDialog(null, "Screen is now open.", "Open Screens", JOptionPane.INFORMATION_MESSAGE);
			fillJcomboBox();
			jComboBox3.setSelectedIndex(0);
			
			
		}
		catch (SQLException e) {
				e.printStackTrace();
		}
	}
	else{
    	JOptionPane.showMessageDialog(null, "Please choose a screen to open.", "Invalid Screen", JOptionPane.WARNING_MESSAGE);
    }
	
}

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
	this.dispose();
	new AutomaticRotation(index);
}

public void fillJcomboBox(){
	
	jComboBox3.removeAllItems();
	
	try {
		MySqlController connection = MySqlController.getInstance();


		ResultSet r = connection.getData("SELECT * FROM TEMPCLOSEDSCREENS");
		jComboBox3.addItem("");
		while(r.next()){
			jComboBox3.addItem("Screen "+r.getString(1)+"   -   "+r.getString(2));
		}

	}
	catch (SQLException e) {
			e.printStackTrace();
	} 
	
}

public void createTempTable(){
    try {

    	MySqlController connection = MySqlController.getInstance();

    	connection.putData("CREATE TABLE IF NOT EXISTS TEMPCLOSEDSCREENS(ID_SCREEN INT(2) NOT NULL, DAY DATE NOT NULL, PRIMARY KEY(ID_SCREEN,DAY))");

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Unable to connect to MySQL database.\n" + e, "Database Error", JOptionPane.WARNING_MESSAGE);
    }
}


    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane jTextPane_date_description;
    // End of variables declaration

}
